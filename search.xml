<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mermaid 使用教程</title>
      <link href="2020/12/05/mermaid/"/>
      <url>2020/12/05/mermaid/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://mermaid-js.github.io/mermaid/#/" target="_blank" rel="noopener">官网文档</a></p><p><img src="mermaid-1.png" alt="mermaid"></p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    A--&gt;B</span><br><span class="line">    A--&gt;C</span><br><span class="line">    B--&gt;D</span><br><span class="line">    C--&gt;D</span><br></pre></td></tr></table></figure><pre class="mermaid">graph LR    A-->B</pre><h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><pre class="mermaid">sequenceDiagram    A->>B: hello</pre><h2 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h2><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><h2 id="git图"><a href="#git图" class="headerlink" title="git图"></a>git图</h2><h2 id="用户地图"><a href="#用户地图" class="headerlink" title="用户地图"></a>用户地图</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>产品经理效率工具</title>
      <link href="2020/12/03/pm-efficiency-tools/"/>
      <url>2020/12/03/pm-efficiency-tools/</url>
      
        <content type="html"><![CDATA[<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2>]]></content>
      
      
      <categories>
          
          <category> 产品经理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产品经理 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Theme-Snail</title>
      <link href="2019/11/01/Hexo-Theme-Snail/"/>
      <url>2019/11/01/Hexo-Theme-Snail/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-snail"><a href="#hexo-theme-snail" class="headerlink" title="hexo-theme-snail"></a>hexo-theme-snail</h1><p><a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">View Hexo-Theme-Snail Sources On Github &#10174; </a></p><p><a href="https://www.dusign.net" target="_blank" rel="noopener">View Live Super Snail Blog &#10174;</a></p><p><img src="snail.png" alt="hexo-theme-snail"></p><p>Hexo-theme-snail is a succinct hexo theme. It has two colors, light and star, that can be set according to your own preferences in the settings, and also has the functions of sharing and commenting. More features are under development.</p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>light color theme and star theme</li><li>diversified comment system</li><li>notice tips</li><li>share to other platforms (under development)</li><li>picture sharing (under development)</li></ul><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="Setup-your-blog"><a href="#Setup-your-blog" class="headerlink" title="Setup your blog"></a>Setup your blog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><h3 id="Installation-Theme"><a href="#Installation-Theme" class="headerlink" title="Installation Theme"></a>Installation Theme</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ rm -rf <span class="built_in">source</span></span><br><span class="line">$ rm _config.yml package.json README.md LICENSE</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/dusign/hexo-theme-snail.git</span><br><span class="line">$ mv ./hexo-theme-snail/snail ./themes</span><br><span class="line">$ mv ./hexo-theme-snail/* ./</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="Set-Theme"><a href="#Set-Theme" class="headerlink" title="Set Theme"></a>Set Theme</h3><p>Modify the value of <code>theme:</code> in <code>_config.yml</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">snail</span></span><br></pre></td></tr></table></figure></p><h3 id="Start-the-Server"><a href="#Start-the-Server" class="headerlink" title="Start the Server"></a>Start the Server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h3><p>Replace the following information with your own.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">At</span> <span class="string">the</span> <span class="string">bottom</span> <span class="string">of</span> <span class="string">the</span> <span class="string">well,</span> <span class="string">it</span> <span class="string">is</span> <span class="string">destined</span> <span class="string">to</span> <span class="string">see</span> <span class="string">only</span> <span class="string">the</span> <span class="string">sky</span> <span class="string">at</span> <span class="string">the</span> <span class="string">wellhead.</span> </span><br><span class="line">          <span class="string">However,</span> <span class="string">the</span> <span class="string">starting</span> <span class="string">point</span> <span class="string">only</span> <span class="string">affects</span> <span class="string">the</span> <span class="string">process</span> <span class="string">of</span> <span class="string">reaching</span> <span class="string">your</span> <span class="string">peak</span> <span class="string">and</span> <span class="string">does</span> <span class="string">not</span> <span class="string">determine</span> <span class="string">the</span> <span class="string">height</span> <span class="string">you</span> <span class="string">reach.</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Dusign</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure></p><h3 id="Site-Settings"><a href="#Site-Settings" class="headerlink" title="Site Settings"></a>Site Settings</h3><p>Put customized pictures in <code>img</code> directory.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site settings</span></span><br><span class="line"><span class="attr">SEOTitle:</span> <span class="string">Hexo-theme-snail</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">hexo-theme-snail@mail.com</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">"A hexo theme"</span></span><br><span class="line"><span class="attr">keyword:</span> <span class="string">"dusign, hexo-theme-snail"</span></span><br><span class="line"><span class="attr">header-img:</span> <span class="string">img/header_img/home-bg-1-dark.jpg</span></span><br><span class="line"><span class="attr">signature:</span> <span class="literal">true</span> <span class="comment">#show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/Just-do-it-white.png</span></span><br></pre></td></tr></table></figure></p><h3 id="SNS-Settings"><a href="#SNS-Settings" class="headerlink" title="SNS Settings"></a>SNS Settings</h3><p>If you don’t want to display it, you can delete it directly.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SNS settings</span></span><br><span class="line"><span class="attr">github_username:</span>    <span class="string">dusign</span></span><br><span class="line"><span class="attr">twitter_username:</span>   <span class="string">dusignr</span></span><br><span class="line"><span class="attr">facebook_username:</span>  <span class="string">Gang</span> <span class="string">Du</span></span><br><span class="line"><span class="attr">zhihu_username:</span> <span class="string">dusignr</span></span><br></pre></td></tr></table></figure></p><h3 id="Sidebar-Settings"><a href="#Sidebar-Settings" class="headerlink" title="Sidebar Settings"></a>Sidebar Settings</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>                      <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"Welcome to visit, I'm Dusign!"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/ironman-draw.png</span>      <span class="comment"># use absolute URL, seeing it's used in both `/` and `/about/`</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># widget behavior</span></span><br><span class="line"><span class="comment">## Archive</span></span><br><span class="line"><span class="attr">archive_type:</span> <span class="string">'monthly'</span></span><br><span class="line"><span class="attr">show_count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Featured Tags</span></span><br><span class="line"><span class="attr">featured-tags:</span> <span class="literal">true</span>                     <span class="comment"># whether or not using Feature-Tags</span></span><br><span class="line"><span class="attr">featured-condition-size:</span> <span class="number">1</span>              <span class="comment"># A tag will be featured if the size of it is more than this condition value</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Friends</span></span><br><span class="line"><span class="attr">friends:</span> <span class="string">[</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Dusign's Blog"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"https://blog.csdn.net/d_Nail"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Dusign's Web"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"#"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Dusign's Github"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"https://github.com/dusign"</span></span><br><span class="line">    <span class="string">&#125;,&#123;</span></span><br><span class="line">        <span class="attr">title:</span> <span class="string">"Other"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">href:</span> <span class="string">"#"</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">]</span></span><br></pre></td></tr></table></figure><h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">snail</span></span><br></pre></td></tr></table></figure><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">      <span class="attr">github:</span> <span class="string">github.repository.address</span></span><br><span class="line">      <span class="attr">coding:</span> <span class="string">coding.repository.address</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>See httpymls://github.com/imsun/gitment for detailed configuration method.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comment</span></span><br><span class="line"><span class="comment">## This comment system is gitment</span></span><br><span class="line"><span class="comment">## gitment url: https://github.com/imsun/gitment</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">client_id:</span></span><br><span class="line">  <span class="attr">client_secret:</span></span><br></pre></td></tr></table></figure></p><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tip</span></span><br><span class="line"><span class="attr">tip:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">content:</span> <span class="string">欢迎访问</span> <span class="string">&lt;a</span> <span class="string">href="https://www.dusign.net"</span> <span class="string">target="dusign"&gt;dusign&lt;/a&gt;</span> <span class="string">的博客，博客系统一键分享的功能还在完善中，请大家耐心等待。</span></span><br><span class="line">          <span class="string">若有问题或者有好的建议欢迎留言，笔者看到之后会及时回复。</span></span><br><span class="line">          <span class="string">评论点赞需要github账号登录，如果没有账号的话请点击</span> </span><br><span class="line">          <span class="string">&lt;a</span> <span class="string">href="https://github.com"</span> <span class="string">target="view_window"</span> <span class="string">&gt;</span> <span class="string">github</span> <span class="string">&lt;/a&gt;</span> <span class="string">注册，</span> <span class="string">谢谢</span> <span class="string">!</span></span><br></pre></td></tr></table></figure><h3 id="Color-Sheme"><a href="#Color-Sheme" class="headerlink" title="Color Sheme"></a>Color Sheme</h3><p>Set the <code>enable</code> value of the desired color sheme to <code>true</code>. If the value of <code>bg_effects.star.enable</code> is <code>true</code>, please modify the value of <code>highlight_theme</code> in <code>./themes/snail/_config.yml</code> to <code>night</code>.<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Color Sheme</span></span><br><span class="line"><span class="comment">## If there is no effect after modification, please empty the cache and try again.</span></span><br><span class="line"><span class="comment">## ⚠️ The following special effects will take up a lot of cpu resorces, please open it carefully.</span></span><br><span class="line"><span class="attr">bg_effects:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">color:</span> <span class="number">129</span><span class="string">,200,61</span></span><br><span class="line">    <span class="attr">pointColor:</span> <span class="number">129</span><span class="string">,200,61</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br><span class="line">    <span class="attr">zIndex:</span> <span class="number">-9</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">99</span></span><br><span class="line">  <span class="attr">mouse_click:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">'"🌱","just do it","🌾","🍀","don'</span><span class="string">'t give up","🍂","🌻","try it again","🍃","never say die","🌵","🌿","🌴"'</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">'"rgb(121,93,179)"</span></span><br><span class="line"><span class="string">          ,"rgb(76,180,231)"</span></span><br><span class="line"><span class="string">          ,"rgb(184,90,154)"</span></span><br><span class="line"><span class="string">          ,"rgb(157,211,250)"</span></span><br><span class="line"><span class="string">          ,"rgb(255,0,0)"</span></span><br><span class="line"><span class="string">          ,"rgb(242,153,29)"</span></span><br><span class="line"><span class="string">          ,"rgb(23,204,16)"</span></span><br><span class="line"><span class="string">          ,"rgb(222,0,0)"</span></span><br><span class="line"><span class="string">          ,"rgb(22,36,92)"</span></span><br><span class="line"><span class="string">          ,"rgb(127,24,116)"</span></span><br><span class="line"><span class="string">          ,"rgb(119,195,79)"</span></span><br><span class="line"><span class="string">          ,"rgb(4,77,34)"</span></span><br><span class="line"><span class="string">          ,"rgb(122,2,60)"'</span></span><br><span class="line">  <span class="attr">star:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="Releases"><a href="#Releases" class="headerlink" title="Releases"></a>Releases</h2><p>V1.0</p><ul><li>fix the bugs</li><li>add comment system</li><li>add notice tips</li><li>add star sheme</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>Apache License 2.0 Copyright(c) 2018-2020 <a href="https://github.com/dusign" target="_blank" rel="noopener">Dusign</a>   </p><p><a href="https://github.com/dusign/hexo-theme-snail" target="_blank" rel="noopener">hexo-theme-snail</a> is derived from <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener">Huxpro</a> Apache License 2.0. Copyright (c) 2015-2020 Huxpro</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo-theme-snail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql简介</title>
      <link href="2019/08/15/Mysql/"/>
      <url>2019/08/15/Mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h2><ol><li><strong>DB</strong>：数据库，保存一组有组织的数据容器</li><li><strong>DBMS</strong>：数据库管理系统，又称为数据库软件，用于管理 DB 中的数据。</li><li><strong>SQL</strong>：结构化查询语言，用于和 DMBS 通信的语言</li></ol><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ul><li>启动服务<br><code>net start mysql</code></li><li>关闭服务<br><code>net stop mysql</code></li><li>登录<br><code>mysql [-h 地址 -p 端口号] -u 用户名 -p 密码</code></li><li>退出<br><code>exit或ctrl+C</code></li></ul><h2 id="MySQL的语法规范"><a href="#MySQL的语法规范" class="headerlink" title="MySQL的语法规范"></a>MySQL的语法规范</h2><ol><li>不区分大小写，但建议关键词大写，表明、列名小写</li><li>每条命令最好分号结尾</li><li>每条命令根据需要，可以进行缩进或换行</li><li>注释<ul><li>单行注释：#注释文字   </li><li>多行注释：—注释文字</li><li>多行注释：/<em> 注释文字 </em>/ </li></ul></li></ol><h2 id="SQL的语言分类"><a href="#SQL的语言分类" class="headerlink" title="SQL的语言分类"></a>SQL的语言分类</h2><ol><li>DQL ( Data Query Language ) ：数据查询语言<br><code>select</code></li><li>DML ( Data Manipulate Language )：数据操作语言<br><code>insert、update、delete</code></li><li>DDL ( Data Define Language )： 数据定义语言<br><code>create、drop、alter</code></li><li>TCL ( Transaction Control Language )： 事物控制语言<br><code>commit、rollback</code></li></ol><h3 id="DQL语言的学习"><a href="#DQL语言的学习" class="headerlink" title="DQL语言的学习"></a>DQL语言的学习</h3><h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>使用 <code>SELECT</code> 语句从表或视图获取数据。表由行和列组成，如电子表格。 通常，我们只希望看到子集行，列的子集或两者的组合。 <code>SELECT</code> 语句的结果称为结果集，它是行列表，每行由相同数量的列组成。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    字段|表达式|常量值|函数</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    表名</span><br></pre></td></tr></table></figure><p>通过 select 查询完的结果，是一个虚拟的表格，不是真实存在的</p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>根据条件过滤原始表的数据，查询到想要的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    字段|表达式|常量值|函数</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    条件</span><br></pre></td></tr></table></figure><p>下列表列出了可用于在 <code>WHERE</code> 子句中形成过滤表达式的比较运算符</p><div class="table-container"><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td><code>=</code></td><td>等于，几乎任何数据类型都可以使用它</td></tr><tr><td><code>&lt;&gt;</code> 或<code>!=</code></td><td>不等于</td></tr><tr><td><code>&lt;</code></td><td>小于，通常使用数字和日期/事件数据类型</td></tr><tr><td><code>&gt;</code></td><td>大于</td></tr><tr><td><code>&lt;=</code></td><td>小于或等于</td></tr><tr><td><code>&gt;=</code></td><td>大于或等于</td></tr><tr><td><code>and(&amp;&amp;)</code></td><td>两个条件如果同时成立，结果为 true，否则为 false</td></tr><tr><td>`or(</td><td></td><td>)`</td><td>两个条件只要有一个成立，结果为 true，否则为 false</td></tr><tr><td><code>not(!)</code></td><td>如果条件成立，则 not 后为 false，否则为 true</td></tr></tbody></table></div><p>还有一些有用的运算符可以在<code>WHERE</code>子句中使用来形成更复杂的条件，例如：</p><ul><li><a href="#####BETWEEN">BETWEEN</a>：选择在更定范围内的值</li><li><a href="#####LIKE">LIKE</a>：匹配基于模式匹配的值</li><li><a href="#####IN">IN</a>：指定值是否匹配列表中的任何值</li><li><code>IS NULL</code>：检查该值是否为 <code>NULL</code></li></ul><h5 id="BETWEEN"><a href="#BETWEEN" class="headerlink" title="BETWEEN"></a>BETWEEN</h5><p>BETWEEN运算符允许指定要测试的值范围。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    字段|表达式|常量值|函数</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    table_name</span><br><span class="line"><span class="keyword">BETWEEN</span> <span class="number">90</span> <span class="keyword">AND</span> <span class="number">100</span>;</span><br></pre></td></tr></table></figure><p>也可以通过使用大于或等于（ &gt;= ）和小于或等于（ &lt;= ）运算符来实现相同的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line">    A&gt;=<span class="number">90</span> <span class="keyword">AND</span> A&lt;=<span class="number">100</span>;</span><br></pre></td></tr></table></figure><p>要查找 A 不在 20 到 100（含 20 到 100 ）之间的，可将 BETWEEN 运算符与 NOT 运算符组合使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    字段|表达式|常量值|函数</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line">    A <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">AND</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    字段|表达式|常量值|函数</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line">    A &lt; <span class="number">20</span> <span class="keyword">OR</span> buyPrice &gt; <span class="number">100</span>;</span><br></pre></td></tr></table></figure><h5 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h5><p>LIKE 操作符通常用于基于模式查询选择数据。以正确的方式使用 LIKE 运算符对于增加 / 减少查询性能至关重要。</p><ul><li>% ：允许匹配任何字符串的零个或多个字符</li><li>_ : 允许匹配任何单个字符</li></ul><p>假设要搜索名字以字符a开头的员工信息，可以在模式末尾使用百分比通配符（％）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    column1,column2,...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    column1 <span class="keyword">LIKE</span> <span class="string">'a%'</span>;</span><br></pre></td></tr></table></figure><p>如果知道要搜索包含指定字符串，则可以在模式的开头和结尾使用百分比（%）通配符。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    column1,column2,...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    column1 <span class="keyword">LIKE</span> <span class="string">'%on%'</span>;</span><br></pre></td></tr></table></figure></p><p>要查找名字以 T 开头的员工，以 m 结尾，并且包含例如 Tom，Tim 之间的任何单个字符，可以使用下划线通配符来构建模式<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    column1,column2,...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    column1 <span class="keyword">LIKE</span> <span class="string">'T_m'</span>;</span><br></pre></td></tr></table></figure></p><ul><li>MySQL 允许将 NOT 运算符与LIKE运算符组合，以找到不匹配特定模式的字符串。  </li><li>有时想要匹配的模式包含通配符，例如 10%，_20 等这样的字符串时。在这种情况下，您可以使用 ESCAPE 子句指定转义字符，以便 MySQL 将通配符解释为文字字符。如果未明确指定转义字符，则反斜杠字符\是默认转义字符。</li></ul><h5 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h5><p>IN 运算符允许您确定指定的值是否与列表中的值或子查询中的任何值匹配。 下面说明了 IN 操作符的语法。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    column1,column2,...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table_name</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    (expr|column_1) <span class="keyword">IN</span> (<span class="string">'value1'</span>,<span class="string">'value2'</span>,...);</span><br></pre></td></tr></table></figure><p>下面我们更详细的来看看上面的查询</p><ul><li>可以在 <code>WHERE</code> 中于 <code>IN</code> 运算符一起使用，也可以使用列或表达式（expr）</li><li>列表中的值必须用逗号(<code>,</code>)隔开</li><li><code>IN</code>操作符可以用在其他语句(如<code>INSERT</code>,<code>UPDATE</code>,<code>delete</code>)的WHERE子句中</li><li>如果column_1的值或expr表达式的结果等于列表中的任何值，则IN运算符返回1，否则返回0。</li></ul><blockquote><p>如果column_1的值或expr表达式的结果等于列表中的任何值，则IN运算符返回1，否则返回0。</p></blockquote><h5 id="IN与子查询"><a href="#IN与子查询" class="headerlink" title="IN与子查询"></a>IN与子查询</h5><p><code>IN</code> 运算符通常用于子查询。子查询不提供常量值列表，而是提供值列表。<br>我们来看两张表：<code>orders</code> 和 <code>orderDetails</code> 表的结构以及它们之间的关系：<br><img src="MySQL/in.png" alt="in"></p><p>例如，如果要查找总金额大于60000的订单，则使用 <code>IN</code> 运算符查询如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    orderNumber, customerNumber, <span class="keyword">status</span>, shippedDate</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    orders</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    orderNumber <span class="keyword">IN</span> (<span class="keyword">SELECT</span> </span><br><span class="line">            orderNumber</span><br><span class="line">        <span class="keyword">FROM</span></span><br><span class="line">            orderDetails</span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> orderNumber</span><br><span class="line">        <span class="keyword">HAVING</span> <span class="keyword">SUM</span>(quantityOrdered * priceEach) &gt; <span class="number">60000</span>);</span><br></pre></td></tr></table></figure><p>上面的整个查询可以分为2个查询</p><ol><li>首先，子查询使用 <code>orderDetails</code> 表中的 <code>GROUP BY</code> 和 <code>HAVING子句</code> 返回总额大于 60000 的订单列表。</li><li>主查询<code>order</code>表中获取数据，并在<code>WHERE</code>子句中应用<code>IN</code>运算符</li></ol><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    字段|表达式|常量值|函数</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    tableName</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    条件</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    排序的字段|表达式|函数|别名【<span class="keyword">asc</span>|<span class="keyword">desc</span>】</span><br></pre></td></tr></table></figure><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    查询的字段，分组函数</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    表</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">    分组的字段</span><br></pre></td></tr></table></figure><ul><li>可以按单个字段分组</li><li>和分组函数一同查询的字段最好是分组后的字段    </li></ul><p>特点：</p><ol><li>分组查询中的筛选条件分为两类  </li></ol><div class="table-container"><table><thead><tr><th>分组筛选</th><th>针对的表</th><th>位置</th><th>关键字</th></tr></thead><tbody><tr><td>分组前筛选</td><td>原始表</td><td>group by的前面</td><td>where</td></tr><tr><td>分组后的筛选</td><td>分组后的结果集</td><td>group by的后面</td><td>having</td></tr></tbody></table></div><ol><li>可以按多个字段分组，字段之间用逗号隔开</li><li>可以支持排序（排序放在整个分组查询后面）</li><li>having 后可以支持别名</li></ol><h5 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h5><table>    <tr>        <th colspan="2">单行函数</th>        <th>含义</th>         </tr>    <tr>        <td rowspan="12">字符函数</td>        <td>concat</td>        <td>拼接</td>    </tr>    <tr>        <td>substr</td>        <td>截取子串</td>    </tr>    <tr>        <td>upper</td>        <td>转换成大写</td>    </tr>    <tr>        <td>lower</td>        <td>转换成小写</td>    </tr>    <tr>        <td>trim</td>        <td>去前后指定的空格和字符</td>    </tr>    <tr>        <td>ltrim</td>        <td>去左边空格</td>    </tr>    <tr>        <td>rtrim</td>        <td>去右边空格</td>    </tr>    <tr>        <td>replace</td>        <td>替换</td>    </tr>    <tr>        <td>replace</td>        <td>替换</td>    </tr>    <tr>        <td>lpad</td>        <td>左填充</td>    </tr>    <tr>        <td>rpad</td>        <td>右填充</td>    </tr>    <tr>        <td>instr</td>        <td>返回字串第一次出现的索引</td>    </tr>    <tr>        <td rowspan="6">数学函数</td>        <td>round</td>        <td>四舍五入</td>    </tr>    <tr>            <td>rand</td>        <td>随机数</td>    </tr>    <tr>          <td>floor</td>        <td>向下取整</td>    </tr>    <tr>        <td>ceil</td>        <td>向上取整</td>    </tr>    <tr>        <td>mod</td>        <td>取余</td>    </tr>    <tr>        <td>ceil</td>        <td>截断</td>    </tr>    <tr>        <td rowspan="5">日期函数</td>        <td>now</td>        <td>当前系统日期+时间</td>    </tr>    <tr>        <td>curdate</td>        <td>当前系统日期</td>    </tr>    <tr>        <td>curtime</td>        <td>当先系统时间</td>    </tr>    <tr>        <td>str_to_date</td>        <td>将字符转换成日期</td>    </tr>    <tr>        <td>date_format</td>        <td>将日期准换成字符</td>    </tr>    <tr>        <td rowspan="2">流程控制函数</td>        <td>if</td>        <td>处理双分支</td>    </tr>    <tr>        <td>case</td>        <td>处理多分支</td>    </tr>    <tr>        <td rowspan="3">其他函数</td>        <td>version</td>        <td>版本</td>    </tr>    <tr>        <td>database</td>        <td>当前库</td>    </tr>    <tr>        <td>user</td>        <td>当前连接用户</td>    </tr>    <tr>        <td rowspan="4">分组函数</td>        <td>sum</td>        <td>求和</td>     </tr>    <tr>        <td>max</td>        <td>最大值</td>     </tr>    <tr>        <td>min</td>        <td>最小值</td>     </tr>    <tr>        <td>avg</td>        <td>平均值</td>     </tr></table><blockquote><ol><li>以上五个分组函数都忽略null值，除了count(*)</li><li>sum和avg一般用于处理数值型；max、min、count可以任何数据类型</li><li>都可以搭配DISTINCT使用，用于统计去重后的结果</li><li>count的参数可以支持字段、’*、常量值、一般放1</li></ol></blockquote><p>参考：【易百教程】：<a href="https://www.yiibai.com/mysql/sql-in.html" target="_blank" rel="noopener">https://www.yiibai.com/mysql/sql-in.html</a></p><h4 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a>多表连接查询</h4><p>笛卡尔积：没有连接条件表关系返回的结果</p><p>连接用于连接多个表，使用JOIN关键字，并且条件语句使用ON而不时WHERE。连接可以替换子查询，并且比子查询的效率一般会更快。可以用AS给列名、计算字段和表名取别名，给表明取别名是为了简化SQL语句及连接相同表。</p><p>连接：</p><ul><li>内连接<ul><li>等值连接</li><li>非等值连接</li><li>自连接</li></ul></li><li>外连接 <ul><li>左外连接</li><li>右外连接</li><li>全外连接</li></ul></li><li>交叉连接</li></ul><h5 id="内连接-INNER-JOIN"><a href="#内连接-INNER-JOIN" class="headerlink" title="内连接(INNER JOIN)"></a>内连接(INNER JOIN)</h5><p><code>INNER JOIN</code> 子句将一个表中的行与其他表中的行进行匹配，并允许从两个表中查询包含列的行记录。<br>在使用时，必须指定以下条件：</p><ul><li>首先，在FROM子句中指定主表</li><li>其次，表中要连接的主表应该出现在<code>INNER JOIN</code>子句中。理论上说，可以连接多个其他表。但是，为了获得更好的性能，应该限制要连接的表的数量(不超过3个表)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    查询列表</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    表<span class="number">1</span> 别名</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> 别名</span><br><span class="line"><span class="keyword">ON</span>  </span><br><span class="line">    连接条件</span><br></pre></td></tr></table></figure><p>可以不明确使用<code>INNER JOIN</code>,而使用普通查询在<code>WHERE</code>中两个表要连接的列用等值方法连接起来<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    A.value,B.value</span><br><span class="line"><span class="keyword">FROM</span>  </span><br><span class="line">    tablea <span class="keyword">AS</span> A, tableb <span class="keyword">AS</span> B</span><br><span class="line"><span class="keyword">WHERE</span> A.key = B.key;</span><br></pre></td></tr></table></figure></p><h5 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h5><p>自连接可以看成内连接的一种，知识连接的表是自身而已<br>一张员工表，包含员工姓名和员工所属部门，要找出Jim处在同一部门的所有成员姓名<br>子查询版本：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    namea</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    department=(</span><br><span class="line">        <span class="keyword">SELECT</span> </span><br><span class="line">            department</span><br><span class="line">        <span class="keyword">FROM</span></span><br><span class="line">            employee</span><br><span class="line">        <span class="keyword">WHERE</span> </span><br><span class="line">            namea=<span class="string">"Jim"</span>);</span><br></pre></td></tr></table></figure></p><p>自连接版本<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    e1.name</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">   employee <span class="keyword">AS</span> e1 <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employee <span class="keyword">AS</span> e2</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">    e1.department = e2.department</span><br><span class="line"><span class="keyword">AND</span> e2.name = <span class="string">"Jim"</span>;</span><br></pre></td></tr></table></figure></p><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><p>外连接查询会返回操作表中至少一个表的所有数据记录</p><h5 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h5><p>指新关系执行匹配时，以关机再LEFT JOIN左边的标为参考表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    字段，...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    表<span class="number">1</span>，</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> </span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">    连接条件</span><br></pre></td></tr></table></figure></p><h5 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h5><p>指新关系执行匹配时，以关机再RIGHT JOIN左边的标为参考表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    字段，...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    表<span class="number">1</span>，</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> </span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">    连接条件</span><br></pre></td></tr></table></figure><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><p>子查询是嵌套在另一个查询中的查询，子查询称为内部查询，而包含子查询的查询称为外部查询。子查询可以在使用表达式的任何地方使用，并且必须在括号中关闭。MySQL推荐使用子查询来实现多表查询数据记录，不建议使用连接查询。</p><p>特点：</p><ul><li>子查询都放在小括号内</li><li>子查询可以放在 from 后面、select 后面、where 后面、having 后米娜、但一般放在条件的右侧</li><li>子查询优先于主查询执行，主查询使用了子查询的执行结果</li><li>子查询根据查询结果的行数不同分为以下两类：<ol><li>单行子查询<ul><li>一般结果集只有一行</li><li>一般搭配单行操作符使用：&gt; &lt; = &lt;&gt; &gt;= &lt;=</li><li>非法使用子查询的情况<ul><li>子查询的结果为一组值</li><li>子查询的结果为空</li></ul></li></ul></li><li>多行子查询<ul><li>结果集有多行</li><li>一般搭配多行操作符使用：and、all、in、not in</li><li>in：属于子查询结果中的任意一个就行，any和all往往可以用其他查询代替</li></ul></li></ol></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    mytable1</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    col1 </span><br><span class="line"><span class="keyword">IN</span>  </span><br><span class="line">    (<span class="keyword">SELECT</span></span><br><span class="line">        col2</span><br><span class="line">    <span class="keyword">FROM</span>    </span><br><span class="line">        mytable2);</span><br></pre></td></tr></table></figure><p>下面的语句可以检索出客户的订单数量，子查询语句会对第一个查询检索出的每个客户执行一次：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, (<span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*)</span><br><span class="line">                   <span class="keyword">FROM</span> Orders</span><br><span class="line">                   <span class="keyword">WHERE</span> Orders.cust_id = Customers.cust_id)</span><br><span class="line">                   <span class="keyword">AS</span> orders_num</span><br><span class="line"><span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> cust_name;</span><br></pre></td></tr></table></figure></p><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p>实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句</p><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    column1,....</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    表</span><br><span class="line">【<span class="keyword">WHERE</span> 条件】</span><br><span class="line">【<span class="keyword">GROUP</span> <span class="keyword">BY</span> 分组字段】</span><br><span class="line">【<span class="keyword">HAVING</span> 条件】</span><br><span class="line">【<span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序的字段】</span><br><span class="line"><span class="keyword">limit</span>   【其实的条目索引】条目数；</span><br></pre></td></tr></table></figure><p>特点</p><ul><li>起始条目索引从 0 开始</li><li>limit 子句放在查询语句的最后</li><li>公式：SELECT <em> FROM LIMIT (page - 1) </em> sizePerPage，siezPerPage</li></ul><p>假如：<br>每页显示条目数：sizePerPage<br>要显示的页数 page</p><h4 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h4><p>使用 UNION 来组合两个查询，如果第一个查询返回 M 行，第二个查询返回 N 行，那么组合查询的结果一般为 M+N 行。</p><p>每个查询必须包含相同的列、表达式和聚集函数。</p><p>默认会去除相同行，如果需要保留相同行，使用 UNION ALL。</p><p>只能包含一个 ORDER BY 子句，并且必须位于语句的最后。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> =<span class="number">2</span>;</span><br></pre></td></tr></table></figure></p><p>特点：<br>    1、多条查询语句的查询的列数必须是一致的<br>    2、多条查询语句的查询的列的类型几乎相同<br>    3、union代表去重，union all代表不去重</p><h3 id="DML语言"><a href="#DML语言" class="headerlink" title="DML语言"></a>DML语言</h3><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><p>普通插入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> mytable(col1,col2)</span><br><span class="line"><span class="keyword">VALUES</span>(val1,val2)</span><br></pre></td></tr></table></figure><p>插入检索出来的数据<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> mytable1(col1, col2)</span><br><span class="line"><span class="keyword">SELECT</span> col1, col2</span><br><span class="line"><span class="keyword">FROM</span> mytable2;</span><br></pre></td></tr></table></figure></p><p>将一个表的内容插入到一个新表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> newtable <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> mytable;</span><br></pre></td></tr></table></figure></p><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>添加列<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> mytable</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">col</span> <span class="built_in">CHAR</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure></p><p>删除列<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> mytable</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> <span class="keyword">col</span>；</span><br></pre></td></tr></table></figure></p><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span>  mytable</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">col</span> = val</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>使用更新和删除操作时一定要用 WHERE 子句，不然会把整张表的数据都破坏。可以先用 SELECT 语句进行测试，防止错误删除。</p><h3 id="DDL语句"><a href="#DDL语句" class="headerlink" title="DDL语句"></a>DDL语句</h3><h4 id="库和表的管理"><a href="#库和表的管理" class="headerlink" title="库和表的管理"></a>库和表的管理</h4><p>创建库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 库名</span><br></pre></td></tr></table></figure><p>创建表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] mytable(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    col1 <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>,</span><br><span class="line">    col2 <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="literal">NULL</span>,</span><br><span class="line">    col3 <span class="built_in">DATE</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>));</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h4 id="常见约束"><a href="#常见约束" class="headerlink" title="常见约束"></a>常见约束</h4><ul><li>NOT NULL</li><li>DEFAULT</li><li>UNIQUE</li><li>CHECK</li><li>PRIMARY KEY</li><li>FOREIGN KEY</li></ul><h2 id="数据库事务"><a href="#数据库事务" class="headerlink" title="数据库事务"></a>数据库事务</h2><h4 id="事物的ACID属性"><a href="#事物的ACID属性" class="headerlink" title="事物的ACID属性"></a>事物的ACID属性</h4><ol><li>原子性(Atomicity)<br>事务被视为不可分割的最小单元，事务的所有操作要么全部提交成功，要么全部失败回滚。<blockquote><p>回滚可以利用回滚日志来实现，回滚日志记录者所执行的修改操作，在回滚时反向执行这些操作即可。</p></blockquote></li><li><p>一致性(Consistency)<br>数据库在事务执行前后都保持一致性状态。在一致性状态下，所有事务对一个数据的读取结果都是相同的。</p></li><li><p>隔离性(lsolation)<br>一个事务所做的修改最终在提交以前，对其他事务时不可见的。</p><ol><li>持久性(Durablility)<br>一旦事务提交，则其所作的修改会永远保存到数据库中，即使系统发生崩溃，事务执行的结果也不能丢失。</li></ol><hr><p>事务的ACID特性概念简单，大怒是很好理解，只要是因为这几个特新不是一种平级关系：</p><ul><li>只有满足一致性，事务的执行结果才是正确的。</li><li>在无并发的情况下，事务串行执行，隔离性一定能够满足。此时只要满足原子性，就一定能满足一致性。</li><li>在并发的情况下，多个事务并行执行，事务不仅要满足原子性，还需要满徐隔离性，才能满足一致性。</li><li>事务满足持久话是为了能够应对数据困崩溃的情况。<br><img src="acid.png" alt="acid"></li></ul></li></ol><h4 id="1-AUTOCOMMIT"><a href="#1-AUTOCOMMIT" class="headerlink" title="1 AUTOCOMMIT"></a>1 AUTOCOMMIT</h4><p>MySQL默认采用自动提交模式。也就是说，如果不显示使用<code>START TRANSACTION</code> 语句来开始一个事务，那么每个查询都会被当作一个事务自动提交</p><h4 id="并发一致性问题"><a href="#并发一致性问题" class="headerlink" title="并发一致性问题"></a>并发一致性问题</h4><p>在并发环境下，事务的隔离性很难保证，也因此会出现很多并发一致性问题。</p><h5 id="丢失修改"><a href="#丢失修改" class="headerlink" title="丢失修改"></a>丢失修改</h5><p>T1和T2两个事务都对一个数据惊醒修改，T1先修改，T2随后修改，T2的修改覆盖了T1的修改<br><img src="fugai.png" alt="fugai"></p><h5 id="脏数据"><a href="#脏数据" class="headerlink" title="脏数据"></a>脏数据</h5><p>T1修改一个数据，T2随后读取这个数据。如果T1撤销了这次修改，那么T2读取的数据就是脏数据<br><img src="zangdu.png" alt="zangdu"></p><h5 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h5><p>T2读取一个数据，T1对该数据做了修改。如果T2再次读取这个数据，此时读取的结果和第一次读取的结果不同<br><img src="bukechongfu1.png" alt="bukechongfu"></p><h5 id="幻影读"><a href="#幻影读" class="headerlink" title="幻影读"></a>幻影读</h5><p>T1读取某个范围的数据，T2再这个范围内插入新的数据，T1再次读取这个范围的数据，此时读取的结果和第一次读取的结果不同。<br><img src="huanying.png" alt="bukechongfu"></p><hr><p>产生并发不一致性问题主要原因是破坏了事务的隔离性，结局方法是通过并发控制来保证隔离性。并发控制通过封锁来实现，但是封锁操作需要用户自己控制，相当复杂。数据管理系统提供了事务的隔离级别，让用户以一种更轻松的方式处理并发一致性问题。</p><h3 id="封锁"><a href="#封锁" class="headerlink" title="封锁"></a>封锁</h3><h4 id="封锁粒度"><a href="#封锁粒度" class="headerlink" title="封锁粒度"></a>封锁粒度</h4><p>MySql中提供了两种封锁粒度：<strong>行级锁和表级锁</strong><br>应该尽量锁定需要修改的那部分数据，而不是所有的资源。锁定的数据量越少，发生锁争用的可能就越小，系统的并发程度就越高。</p><p>但是加锁需要消耗资源，锁的各种操作(包括获取锁、释放锁、以及检查锁状态)都会增加系统开销。因此封锁粒度越小，系统开销开销就越大。</p><h4 id="封锁类型"><a href="#封锁类型" class="headerlink" title="封锁类型"></a>封锁类型</h4><ol><li>读写锁<ul><li>排它锁(Exclusive),简写为X锁，又称写锁</li><li>共享锁(Shared),简称为S锁，又称读锁</li></ul></li></ol><p>有以下两个规定：</p><ul><li>一个事务对数据对象A加了X锁，就可以对A进行读取和更新。加锁期间其它事务不能对A加任何锁。</li><li>一个事务对数据对象A加了S锁，可以对A进行读取操作，但不能进行更新操作。加锁期间其他事务能对A加S锁，但是不能加X锁。</li></ul><p>锁的兼容关系如下</p><div class="table-container"><table><thead><tr><th>-</th><th>X</th><th>S</th></tr></thead><tbody><tr><td>X</td><td>x</td><td>x</td></tr><tr><td>S</td><td>x</td><td>√</td></tr></tbody></table></div><ol><li>意向锁<br>使用意向锁(Intention Locks)可以更容易地支持多粒度封锁</li></ol><p>再存在行级锁和表级锁的情况下，事务T想要对表A中的任意一行加了锁，那么就需要对表A的每一行都检测一次，这是非常耗时的。</p><p>意向锁再原来的X/S锁上引入了IX/IS，IX/IS都是表锁，用来表示一个事务想要再表中的某个数据行加上X锁或S锁。有以下两个规定：</p><ul><li>一个事务再获得某个数据对象的S锁之前，必须现货的表的IS锁或者更强的锁；</li><li>一个事务再获得数据对象的X锁之前，必须先获得表的IX锁。</li></ul><p>通过引入意向锁，事务T想要对表A加X锁，只需要先检测是否有其他事务对表A加了X/IX/IS锁，如果加了就表示有其他事务证字啊使用这个表或者表中的某一行的锁，因此事务T加X锁失败</p><p>各种锁的兼容关系如下：</p><div class="table-container"><table><thead><tr><th>-</th><th>X</th><th>IX</th><th>S</th><th>IS</th></tr></thead><tbody><tr><td>X</td><td>x</td><td>x</td><td>x</td><td>x</td></tr><tr><td>IX</td><td>x</td><td>√</td><td>x</td><td>√</td></tr><tr><td>S</td><td>x</td><td>x</td><td>√</td><td>√</td></tr><tr><td>IS</td><td>x</td><td>√</td><td>√</td><td>√</td></tr></tbody></table></div><p>解释如下：</p><ul><li>热议IS/IX锁之间都是兼容的，因为它们知识表示想要对表加锁，而不是真正加锁；</li><li>S锁只与IS锁兼容，也就是说事务T想要对数据加S锁，其他事务可以获得对表或者表中的行的S锁。</li></ul><h4 id="封锁协议"><a href="#封锁协议" class="headerlink" title="封锁协议"></a>封锁协议</h4><p>在要运用X锁和S锁对数据对象加锁时，还需要约定一些规则，我们称之为<strong>封锁协议</strong></p><h5 id="一级封锁协议"><a href="#一级封锁协议" class="headerlink" title="一级封锁协议"></a>一级封锁协议</h5><p>事务T要修改数据A时必须加X锁，直到T结束才释放锁</p><p>可以解决丢失修改问题，因为不能同时有两个事务对同一个数据进行修改，哪个事务的修改就不会被覆盖。</p><div class="table-container"><table><thead><tr><th>T1</th><th>T2</th></tr></thead><tbody><tr><td>lock-x(A)</td><td></td></tr><tr><td>read A = 20</td><td></td></tr><tr><td></td><td>lock-x(A)</td></tr><tr><td></td><td>wait</td></tr><tr><td>write A=19</td><td></td></tr><tr><td>commit</td><td></td></tr><tr><td>unlock-x(A)</td><td></td></tr><tr><td></td><td>obtain</td></tr><tr><td></td><td>read A=19</td></tr><tr><td></td><td>write A=21</td></tr><tr><td></td><td>commit</td></tr><tr><td></td><td>unlock-x(A)</td></tr></tbody></table></div><h5 id="二级封锁协议"><a href="#二级封锁协议" class="headerlink" title="二级封锁协议"></a>二级封锁协议</h5><p>在一级的基础上，要求读取数据A时必须jiaS锁，读取完马上释放S锁</p><p>可以解决读脏数据问题，因为一个事务在对数据A进行修改，根据1级封锁协议，会加X锁，那么就不能再加S锁了，也就是不会读入数据</p><div class="table-container"><table><thead><tr><th>T1</th><th>T2</th></tr></thead><tbody><tr><td>lock-x(A)</td><td></td></tr><tr><td>read A=20</td><td></td></tr><tr><td>write A=19</td><td></td></tr><tr><td></td><td>lock-s(A)</td></tr><tr><td></td><td>wait</td></tr><tr><td>rollback</td><td></td></tr><tr><td>A=20</td><td></td></tr><tr><td>unlock-x(A)</td><td></td></tr><tr><td></td><td>obtain</td></tr><tr><td></td><td>read A=20</td></tr><tr><td></td><td>unlock-s(A)</td></tr><tr><td></td><td>commit</td></tr></tbody></table></div><h5 id="三级封锁协议"><a href="#三级封锁协议" class="headerlink" title="三级封锁协议"></a>三级封锁协议</h5><p>在一级的基础上，要求读数据A时必须加S锁，直到事务结束了才能释放S锁。可以解决不可重复度的问题，因为读A时，其他事务不能对A加X锁，从而笔迷拿了在读的期间数据发生变化</p><div class="table-container"><table><thead><tr><th>T1</th><th>T2</th></tr></thead><tbody><tr><td>lock-s(A)</td><td></td></tr><tr><td>read A=20</td><td></td></tr><tr><td></td><td>lock-x(A)</td></tr><tr><td></td><td>wait</td></tr><tr><td>read A=20</td><td></td></tr><tr><td>commit</td><td></td></tr><tr><td>unlock-s(A)</td><td></td></tr><tr><td></td><td>obtain</td></tr><tr><td></td><td>read A=20</td></tr><tr><td></td><td>write A=19</td></tr><tr><td></td><td>commit</td></tr><tr><td></td><td>unlock-X(A)</td></tr></tbody></table></div><blockquote><p>上述三级协议的主要区别在于什么操作需要申请封锁，以及何时释放锁</p></blockquote><h4 id="两段锁协议"><a href="#两段锁协议" class="headerlink" title="两段锁协议"></a>两段锁协议</h4><p>加锁和解锁分为两个阶段进行</p><p>可串行化调度室指，通过并发控制，使得并发执行的事务结果与某个串行执行的事务结果相同。</p><p>事务遵循两段锁协议是保证可串行化调度的充分条件。例如以下操作满足两段锁协议，它是可串行话调度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lock-x(A)...lock-s(B)...lock-s(C)...unlock(A)...unlock(C)...unlock(B)</span><br></pre></td></tr></table></figure></p><p>但不是必要条件，例如如下操作不满足两段锁协议，但是他还是可串行化调度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lock-x(A)...unlock(A)...lock-s(B)...unlock(B)...lock-s(C)...unlock(C)</span><br></pre></td></tr></table></figure></p><h4 id="MySQL隐式与显示锁定"><a href="#MySQL隐式与显示锁定" class="headerlink" title="MySQL隐式与显示锁定"></a>MySQL隐式与显示锁定</h4><p>MySQL的InnoDB存储引擎采用两段锁协议，会根据隔离级别在所需要的时候自动加锁，并且所有的锁都是在同一时刻被释放，这被称为隐式锁定</p><p>InnoDB也可以使用特定的语句进行显示锁定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT ... LOCK In SHARE MODE;</span><br><span class="line">SELECT ... FOR UPDATE;</span><br></pre></td></tr></table></figure></p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h2 id="索引是什么"><a href="#索引是什么" class="headerlink" title="索引是什么"></a>索引是什么</h2><p>索引是为了加速对表中数据行的检索而创建的一种分散存储的<strong>数据结构</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
